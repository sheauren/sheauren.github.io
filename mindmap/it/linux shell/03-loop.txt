* for
    * loop range
        * for i in 1 2 3 4 5
        * do
            * xxx
        * done
    * loop default by $@ : loop all params
        * for name
        * do
            * xxx
        * done
    * expression
        * for ((i=1;i<5;i++))
        * do
            * echo $i
        * done
    * c tyle
        * for ((i=1,j=5;i<=5;i++,j--))
        * do
            * xxx
        * done
* extent
    * echo -n {1..5}
        * -n : no newline
    * echo {5..1}
    * echo {1..10..2}
        * 1 3 5 7 9
    * echo {x,y{i,j}{1,2,3},z}
* seq
    * seq 1 5
    * seq 2 2 10
    * seq -s',' 1 5
    * seq 5 
        * default start from 1

* IFS : internal field separater
    * echo "$IFS"
    * input split words by $IFS
    * set IFS="t"
    * read -p "pls input 3 word" x y z
        * 1t2t3
            * x=1
            * y=2
            * z=3
* while:
    * syntax:
        * while [ %i -le 5]
        * do
            * xxx
        * done
    * special condition
        * while ps aux | grep -v grep | grep -q httpd
* read file
    * example
        * while read line
        * do
            * xxx
        * done < filename
    * example
        * xxx | while read line
        * do
            * xxx
        * done
    * change IFS to read
* read from pipeline
    * example
        * df -h | grep ^/ | while read name size other
* until
    * unitl [ %i -ge 5 ]
    * do
        * echo $i
        * let i++
    * done
* select : create menu
    * select item in "CPU" "IP" "MEM" "exit"
    * do
        * case $item in 
            * "CPU")
                * uptime;;
            * "IP")
                * ip a s;;
            * "MEM")
                * free;;
            * "exit")
                * exit;;
            * *)
                * echo error;;
        * esac
    * done
* break/continue/exit
    * [ $i -eq3 ] && exit
    * [ $i -eq3 ] && continue
    * [ $i -eq3 ] && break